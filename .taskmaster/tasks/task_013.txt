# Task ID: 13
# Title: Nginx 설정 파일 작성
# Status: pending
# Dependencies: 12
# Priority: medium
# Description: SPA 라우팅 지원, 정적 파일 서빙, 그리고 API 프록시 설정이 포함된 Nginx 설정 파일을 작성합니다.
# Details:
1. 기본 Nginx 설정 구성:
   - HTTP 서버 블록 설정 (listen 포트, server_name 등)
   - 기본 오류 페이지 및 로깅 설정
   - GZIP 압축 활성화로 성능 최적화
   - 보안 관련 헤더 설정 (X-Content-Type-Options, X-Frame-Options 등)

2. 정적 파일 서빙 설정:
   - React 빌드 결과물을 위한 root 디렉토리 설정
   - 정적 자산(CSS, JS, 이미지 등)에 대한 캐싱 설정
   - 정적 파일 요청에 대한 효율적인 처리를 위한 설정
   - 파일 확장자별 적절한 MIME 타입 설정

3. SPA 라우팅(HTML5 History API) 지원:
   - 모든 페이지 요청을 index.html로 리다이렉트하는 설정
   - 정적 파일 요청은 제외하고 클라이언트 라우팅 지원
   - 404 오류 처리 방식 설정

4. API 프록시 설정:
   - /api/ 경로에 대한 프록시 설정 (백엔드 API 서버로 요청 전달)
   - /nid/naver/ 경로에 대한 프록시 설정 (네이버 인증 서비스로 요청 전달)
   - /openapi/naver/ 경로에 대한 프록시 설정 (네이버 오픈 API로 요청 전달)
   - 프록시 요청에 대한 헤더 설정 및 타임아웃 구성
   - CORS 관련 헤더 설정

5. 성능 및 보안 최적화:
   - 정적 파일에 대한 효율적인 캐싱 전략 구현
   - 요청 제한 설정으로 DDoS 공격 방지
   - SSL/TLS 설정 준비 (프로덕션 환경용)
   - 불필요한 정보 노출 방지를 위한 서버 토큰 제거

# Test Strategy:
1. 로컬 환경에서 Nginx 설정 파일 문법 검증:
   - `nginx -t -c /path/to/nginx.conf` 명령으로 설정 파일 문법 오류 확인
   - 오류 없이 설정 파일이 로드되는지 확인

2. 정적 파일 서빙 테스트:
   - 다양한 정적 자원(CSS, JS, 이미지 등)에 대한 요청 테스트
   - 개발자 도구를 통해 적절한 캐싱 헤더가 설정되었는지 확인
   - 파일 타입별 올바른 MIME 타입이 반환되는지 확인

3. SPA 라우팅 테스트:
   - 다양한 라우트로 직접 접근하여 올바르게 애플리케이션이 로드되는지 확인
   - 페이지 새로고침 후에도 현재 라우트가 유지되는지 확인
   - 브라우저 히스토리 탐색(뒤로/앞으로)이 올바르게 작동하는지 확인

4. API 프록시 테스트:
   - /api/ 엔드포인트로 요청을 보내 백엔드 서버로 올바르게 프록시되는지 확인
   - /nid/naver/ 및 /openapi/naver/ 경로에 대한 프록시 동작 확인
   - 프록시 요청 시 헤더가 올바르게 전달되는지 확인
   - 응답 시간 및 타임아웃 설정이 예상대로 작동하는지 확인

5. 보안 설정 테스트:
   - 보안 헤더가 올바르게 설정되었는지 확인 (curl 또는 개발자 도구 사용)
   - 서버 정보 노출이 최소화되었는지 확인
   - 요청 제한 설정이 올바르게 작동하는지 테스트

6. Docker 환경에서 통합 테스트:
   - Docker 컨테이너에서 Nginx 설정으로 서버 실행
   - 모든 기능이 컨테이너 환경에서도 정상 작동하는지 확인
