# Task ID: 11
# Title: Supabase 실제 사용자 인증 구현
# Status: pending
# Dependencies: 8
# Priority: medium
# Description: 모든 화면 개발 완료 후 실제 Supabase Auth를 사용하여 사용자 인증 시스템을 구현합니다.
# Details:
1. Supabase JS 클라이언트 설치 및 설정 (v2.24.0): npm install @supabase/supabase-js 및 환경 변수 설정
2. React에서 Supabase Auth 컨텍스트 설정: AuthContext 생성 및 useAuth 훅 구현
3. 이메일/비밀번호 인증 방법 구현: signUp, signIn, signOut 함수 구현
4. 소셜 인증(Google, Facebook) 방법 구현 (선택사항): OAuth 제공자 설정 및 signInWithOAuth 구현
5. 기존 로그인/회원가입 화면에 실제 인증 로직 연결: 임시 인증 코드를 실제 Supabase Auth 호출로 교체
6. 보호된 라우트 설정 및 인증 미들웨어 구현: ProtectedRoute 컴포넌트 생성 및 라우터 설정
7. 사용자 프로필 페이지 기능 추가: 사용자 정보 조회/수정 기능 구현
8. 비밀번호 재설정 기능 구현: resetPasswordForEmail 및 updateUser 함수 활용
9. 사용자 데이터 접근 제어를 위한 Supabase 정책 설정: RLS(Row Level Security) 정책 구성
10. 기존 임시 인증 코드 제거 및 실제 인증으로 교체: 모든 컴포넌트에서 실제 인증 상태 확인

# Test Strategy:
1. 이메일/비밀번호 회원가입 및 로그인 기능 테스트
2. 소셜 로그인(Google, Facebook) 플로우 테스트
3. 보호된 라우트 접근 제어 테스트 (인증되지 않은 사용자 리다이렉트 확인)
4. 사용자 프로필 정보 조회 및 수정 기능 테스트
5. 비밀번호 재설정 이메일 발송 및 재설정 프로세스 테스트
6. 세션 만료 및 자동 로그아웃 기능 테스트
7. Supabase RLS 정책이 올바르게 적용되는지 데이터베이스 레벨에서 확인
8. 다양한 브라우저에서 인증 상태 유지 테스트
9. 네트워크 오류 시 인증 오류 처리 테스트
10. 기존 임시 인증 코드가 완전히 제거되었는지 코드 검토

# Subtasks:
## 1. Supabase 클라이언트 설정 [pending]
### Dependencies: None
### Description: 프로젝트에 Supabase를 연결하고 클라이언트를 설정합니다.
### Details:
1. Supabase 프로젝트 생성 및 API 키 확보
2. 필요한 패키지 설치 (@supabase/supabase-js)
3. 환경 변수 설정 (SUPABASE_URL, SUPABASE_ANON_KEY)
4. 클라이언트 초기화 코드 작성 및 싱글톤 패턴 구현
5. 기본 연결 테스트 구현

테스트 전략: 클라이언트가 올바르게 초기화되는지 확인하는 단위 테스트 작성

## 2. 인증 컨텍스트 및 훅 구현 [pending]
### Dependencies: 11.1
### Description: React 애플리케이션 전체에서 사용할 인증 상태 관리 컨텍스트와 커스텀 훅을 구현합니다.
### Details:
1. AuthContext 생성 (사용자 상태, 로딩 상태, 에러 상태 관리)
2. AuthProvider 컴포넌트 구현
3. useAuth 커스텀 훅 개발
4. 세션 지속성 및 자동 로그인 기능 구현
5. 로그아웃 기능 구현

테스트 전략: 컨텍스트 상태 변화와 훅 동작을 검증하는 단위 테스트 작성

## 3. 이메일/비밀번호 인증 기능 개발 [pending]
### Dependencies: 11.1, 11.2
### Description: 이메일과 비밀번호를 사용한 기본 인증 기능을 구현합니다.
### Details:
1. 회원가입 기능 구현 (이메일/비밀번호)
2. 로그인 기능 구현
3. 이메일 확인 프로세스 구현
4. 비밀번호 재설정 기능 구현
5. 폼 유효성 검사 및 에러 처리

테스트 전략: 각 인증 기능에 대한 통합 테스트 및 에러 케이스 테스트 작성

## 4. 소셜 인증 기능 구현 [pending]
### Dependencies: 11.1, 11.2
### Description: Google, GitHub 등 소셜 로그인 기능을 구현합니다.
### Details:
1. Supabase 대시보드에서 소셜 공급자 설정
2. OAuth 리디렉션 URL 설정
3. 소셜 로그인 버튼 및 UI 구현
4. 소셜 인증 후 사용자 정보 처리
5. 소셜 계정과 기존 계정 연결 기능 구현

테스트 전략: 소셜 로그인 플로우를 모킹하여 통합 테스트 작성

## 5. 보호된 라우트 및 인증 미들웨어 설정 [pending]
### Dependencies: 11.2, 11.3
### Description: 인증된 사용자만 접근할 수 있는 보호된 라우트와 인증 미들웨어를 구현합니다.
### Details:
1. ProtectedRoute 컴포넌트 구현
2. 인증 상태에 따른 라우팅 로직 개발
3. 인증 미들웨어 구현 (API 요청 시 토큰 첨부)
4. 세션 만료 처리 및 자동 갱신 기능
5. 권한 기반 접근 제어 구현

테스트 전략: 다양한 인증 상태에서 라우팅 동작을 검증하는 테스트 작성

## 6. 사용자 프로필 및 비밀번호 관리 기능 개발 [pending]
### Dependencies: 11.3
### Description: 사용자 프로필 정보 관리 및 비밀번호 변경 기능을 구현합니다.
### Details:
1. 사용자 프로필 조회 및 수정 기능 구현
2. 프로필 이미지 업로드 기능 구현
3. 비밀번호 변경 기능 구현
4. 계정 삭제 기능 구현
5. 사용자 설정 저장 기능 구현

테스트 전략: 프로필 관리 기능에 대한 통합 테스트 및 에러 처리 테스트 작성

## 7. 기존 임시 인증 코드 교체 및 테스트 [pending]
### Dependencies: 11.3, 11.4, 11.5, 11.6
### Description: 기존의 임시 인증 코드를 Supabase 인증으로 교체하고 전체 시스템을 테스트합니다.
### Details:
1. 기존 인증 코드 식별 및 마이그레이션 계획 수립
2. 점진적으로 코드 교체 진행
3. 인증 관련 UI 컴포넌트 업데이트
4. 전체 인증 플로우 테스트
5. 성능 및 보안 테스트 수행

테스트 전략: E2E 테스트를 통해 전체 인증 플로우 검증 및 회귀 테스트 수행

